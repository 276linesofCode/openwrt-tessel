sudo: false
language: python

addons:
  apt:
    packages:
      - coreutils
      - rsync

cache:
  directories:
  - "$HOME/gcloud/"

env:
- PATH=$PATH:$HOME/gcloud/google-cloud-sdk/bin

git:
  submodules: false

before_install:
- if [ ! -d $HOME/gcloud/google-cloud-sdk ]; then mkdir -p $HOME/gcloud && wget https://dl.google.com/dl/cloudsdk/release/google-cloud-sdk.tar.gz
  --directory-prefix=$HOME/gcloud && cd $HOME/gcloud && tar xzf google-cloud-sdk.tar.gz
  && printf '\ny\n\ny\ny\n' | ./google-cloud-sdk/install.sh && cd $TRAVIS_BUILD_DIR;
  fi
- ssh-keygen -q -f ~/.ssh/google_compute_engine -N ""
- gcloud auth activate-service-account --key-file <(echo "$SERVICE_ACCOUNT" | base64 --decode)
- gcloud config set project technical-tusk

install:
- yes | gcloud compute instances delete travis-instance --zone us-central1-b || true
- gcloud compute instances create travis-instance --zone us-central1-b --image ubuntu-14-04 --machine-type n1-highcpu-32 --boot-disk-size 200 --scopes compute-rw
- |
  while [ 1 ]; do
    gcloud compute ssh travis-instance --zone us-central1-b --command 'exit 0' -- -o ConnectTimeout=10 > /dev/null 2>&1 && break
    sleep 1
  done
- gcloud compute ssh travis-instance --zone us-central1-b --command 'at now +60 minute -f <(echo "yes | gcloud compute instances delete travis-instance --zone us-central1-b")'

script:
- |
  rsync -avz -e "$(gcloud compute ssh --zone us-central1-b travis-instance --dry-run | sed s/'[^ ]*$'//)" . "$(gcloud compute ssh --zone us-central1-b travis-instance --dry-run | awk 'END {print $NF}'):~/openwrt-tessel"
- gcloud compute ssh travis-instance --zone us-central1-b --command "echo 'export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID' >> ~/.bashrc; echo 'export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY' >> ~/.bashrc; "
- |
  gcloud compute ssh travis-instance --zone us-central1-b --command '
  set -e
  set -x

  sudo mkdir /tmp/ramdisk
  sudo chmod 777 /tmp/ramdisk
  sudo mount -t tmpfs -o size=14G tmpfs /tmp/ramdisk/
  
  sudo apt-get update -qq
  sudo apt-get install -y software-properties-common
  sudo apt-add-repository -y ppa:terry.guo/gcc-arm-embedded
  sudo apt-get update -qq
  sudo apt-get install -y build-essential python-pip git-core g++ subversion libncurses-dev libssl-dev unzip gettext gcc-arm-none-eabi

  mkdir ~/upload
  cd ~/openwrt-tessel
  git submodule update --init --recursive

  cp -rf ~/openwrt-tessel /tmp/ramdisk/v2
  pushd /tmp/ramdisk/v2
  make -j64 || make -j64 || make -j64 || make -j64 || make -j64 V=s
  cp /tmp/ramdisk/v2/openwrt/bin/ramips/*sysupgrade.bin ~/upload
  tar -czf ~/upload/toolchain-mipsel.tar.gz -C /tmp/ramdisk/v2/openwrt/staging_dir $(find /tmp/ramdisk/v2/openwrt/staging_dir -iname '*-mipsel_*' -exec basename {} \;)
  popd

  rm -rf /tmp/ramdisk/v2

  cp -rf ~/openwrt-tessel /tmp/ramdisk/vm
  pushd /tmp/ramdisk/vm
  make -j64 TARGET=vm || make -j64 TARGET=vm || make -j64 TARGET=vm || make -j64 TARGET=vm || make -j64 TARGET=vm V=s
  cp /tmp/ramdisk/vm/openwrt/bin/x86/*.vdi ~/upload
  tar -czf ~/upload/toolchain-x86.tar.gz -C /tmp/ramdisk/vm/openwrt/staging_dir $(find /tmp/ramdisk/vm/openwrt/staging_dir -iname '*-i386_*' -exec basename {} \;)
  popd

  source ~/.bashrc
  sudo -H python -m pip install awscli
  aws s3 sync ~/upload/. s3://tessel-builds/firmware/
  '

after_script:
- yes | gcloud compute instances delete travis-instance --zone us-central1-b || true
